# Generated by Django 5.2.5 on 2025-08-19 05:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
                'db_table': 'expense_categories',
            },
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'lead_sources',
            },
        ),
        migrations.CreateModel(
            name='MedicineCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Medicine Categories',
                'db_table': 'medicine_categories',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('doctor', 'Doctor'), ('super_user', 'Super User'), ('operation_manager', 'Operation Manager'), ('pharmacy_manager', 'Pharmacy Manager'), ('staff', 'Staff'), ('cro', 'CRO')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointment_date', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=15)),
                ('notes', models.TextField(blank=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_appointments', to=settings.AUTH_USER_MODEL)),
                ('assigned_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_appointments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'appointments',
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField(unique=True)),
                ('new_patients', models.PositiveIntegerField(default=0)),
                ('total_appointments', models.PositiveIntegerField(default=0)),
                ('completed_appointments', models.PositiveIntegerField(default=0)),
                ('cancelled_appointments', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cash_collection', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('card_collection', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('outstanding_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('prp_sessions', models.PositiveIntegerField(default=0)),
                ('mesotherapy_sessions', models.PositiveIntegerField(default=0)),
                ('lllt_sessions', models.PositiveIntegerField(default=0)),
                ('other_treatments', models.PositiveIntegerField(default=0)),
                ('medicine_sales_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'daily_reports',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expense_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expense_date', models.DateField()),
                ('receipt_image', models.ImageField(blank=True, null=True, upload_to='expenses/receipts/')),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('vendor_name', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='pending', max_length=15)),
                ('notes', models.TextField(blank=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_expenses', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.expensecategory')),
            ],
            options={
                'db_table': 'expenses',
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('medicine_type', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('topical', 'Topical'), ('solution', 'Solution'), ('other', 'Other')], max_length=20)),
                ('strength', models.CharField(blank=True, max_length=50)),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_stock_level', models.PositiveIntegerField(default=10)),
                ('unit_of_measurement', models.CharField(default='pieces', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('contraindications', models.TextField(blank=True)),
                ('storage_instructions', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.medicinecategory')),
            ],
            options={
                'db_table': 'medicines',
            },
        ),
        migrations.CreateModel(
            name='MedicineStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_quantity', models.PositiveIntegerField(default=0)),
                ('reserved_quantity', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('medicine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='core.medicine')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'medicine_stocks',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField()),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=10)),
                ('phone_number', models.CharField(max_length=17)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('referred_by', models.CharField(blank=True, max_length=200)),
                ('referral_source', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=17)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=17)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('hair_loss_concern', models.TextField(blank=True)),
                ('previous_treatments', models.TextField(blank=True)),
                ('budget_range', models.CharField(blank=True, max_length=100)),
                ('last_contact_date', models.DateTimeField(blank=True, null=True)),
                ('next_followup_date', models.DateTimeField(blank=True, null=True)),
                ('conversion_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_cro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leads', to=settings.AUTH_USER_MODEL)),
                ('lead_source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.leadsource')),
                ('converted_patient', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.patient')),
            ],
            options={
                'db_table': 'leads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HairConsultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_date', models.DateTimeField(auto_now_add=True)),
                ('hair_loss_onset', models.CharField(blank=True, max_length=200)),
                ('hair_loss_duration', models.CharField(blank=True, max_length=100)),
                ('affected_area', models.TextField(blank=True)),
                ('associated_symptoms', models.TextField(blank=True)),
                ('previous_treatments', models.TextField(blank=True)),
                ('scalp_condition', models.CharField(blank=True, choices=[('normal', 'Normal'), ('oily', 'Oily'), ('dry', 'Dry'), ('dandruff', 'Dandruff'), ('inflammation', 'Inflammation')], max_length=20)),
                ('hair_density', models.CharField(blank=True, max_length=100)),
                ('miniaturization_grade', models.CharField(blank=True, max_length=100)),
                ('pull_test', models.CharField(blank=True, choices=[('positive', 'Positive'), ('negative', 'Negative')], max_length=10)),
                ('dermoscopy_findings', models.TextField(blank=True)),
                ('scalp_zones_image', models.ImageField(blank=True, null=True, upload_to='consultation/scalp_zones/')),
                ('hair_patterns_image', models.ImageField(blank=True, null=True, upload_to='consultation/hair_patterns/')),
                ('examination_remarks', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultations', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.patient')),
            ],
            options={
                'db_table': 'hair_consultations',
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bill_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('bill_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partially Paid'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.appointment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='core.patient')),
            ],
            options={
                'db_table': 'bills',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.patient'),
        ),
        migrations.CreateModel(
            name='PatientMedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hypertension', models.BooleanField(default=False)),
                ('hypertension_family', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(default=False)),
                ('diabetes_family', models.BooleanField(default=False)),
                ('thyroid_disorder', models.BooleanField(default=False)),
                ('thyroid_disorder_family', models.BooleanField(default=False)),
                ('autoimmune_disease', models.BooleanField(default=False)),
                ('autoimmune_disease_family', models.BooleanField(default=False)),
                ('allergies', models.BooleanField(default=False)),
                ('allergies_family', models.BooleanField(default=False)),
                ('allergy_details', models.TextField(blank=True)),
                ('current_medications', models.TextField(blank=True)),
                ('surgical_history', models.TextField(blank=True)),
                ('other_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='core.patient')),
            ],
            options={
                'db_table': 'patient_medical_history',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('upi', 'UPI'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque')], max_length=15)),
                ('transaction_reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.bill')),
                ('received_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='ProgressPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='progress/')),
                ('photo_type', models.CharField(max_length=50)),
                ('taken_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
            ],
            options={
                'db_table': 'progress_photos',
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('adjustment', 'Adjustment'), ('expired', 'Expired'), ('damaged', 'Damaged'), ('return', 'Return')], max_length=15)),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=200)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.medicine')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.patient')),
            ],
            options={
                'db_table': 'stock_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('primary_diagnosis', models.TextField()),
                ('differential_factors', models.TextField(blank=True)),
                ('procedure_type', models.CharField(choices=[('prp', 'PRP'), ('mesotherapy', 'Mesotherapy'), ('lllt', 'LLLT'), ('other', 'Other')], max_length=20)),
                ('session_frequency', models.CharField(max_length=100)),
                ('total_sessions', models.PositiveIntegerField()),
                ('adjunctive_treatments', models.TextField(blank=True)),
                ('expected_outcomes_explained', models.BooleanField(default=False)),
                ('consent_obtained', models.BooleanField(default=False)),
                ('patient_consent_signature', models.ImageField(blank=True, null=True, upload_to='consent/signatures/')),
                ('clinician_signature', models.ImageField(blank=True, null=True, upload_to='consent/clinician/')),
                ('cost_per_session', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plan', to='core.hairconsultation')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'treatment_plans',
            },
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('followup_date', models.DateTimeField()),
                ('overall_response_percentage', models.PositiveIntegerField()),
                ('patient_satisfaction', models.PositiveIntegerField()),
                ('future_recommendations', models.TextField()),
                ('maintenance_plan', models.TextField(blank=True)),
                ('doctor_remarks', models.TextField(blank=True)),
                ('next_followup_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='core.patient')),
                ('progress_photos', models.ManyToManyField(blank=True, to='core.progressphoto')),
                ('treatment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='core.treatmentplan')),
            ],
            options={
                'db_table': 'followups',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='treatment_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.treatmentplan'),
        ),
        migrations.CreateModel(
            name='TreatmentSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_number', models.PositiveIntegerField()),
                ('procedure_performed', models.CharField(max_length=200)),
                ('parameters_dosage', models.TextField(blank=True)),
                ('scalp_prep_anesthesia', models.TextField(blank=True)),
                ('observations_during_procedure', models.TextField(blank=True)),
                ('immediate_post_care', models.TextField(blank=True)),
                ('adverse_events', models.BooleanField(default=False)),
                ('adverse_event_details', models.TextField(blank=True)),
                ('medications_prescribed', models.TextField(blank=True)),
                ('next_appointment_date', models.DateTimeField(blank=True, null=True)),
                ('clinician_initials', models.CharField(blank=True, max_length=10)),
                ('before_photo', models.ImageField(blank=True, null=True, upload_to='sessions/before/')),
                ('after_photo', models.ImageField(blank=True, null=True, upload_to='sessions/after/')),
                ('session_remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='session', to='core.appointment')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_sessions', to=settings.AUTH_USER_MODEL)),
                ('treatment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='core.treatmentplan')),
            ],
            options={
                'db_table': 'treatment_sessions',
                'unique_together': {('treatment_plan', 'session_number')},
            },
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('treatment', 'Treatment'), ('medicine', 'Medicine'), ('consultation', 'Consultation'), ('other', 'Other')], max_length=15)),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.bill')),
                ('medicine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.medicine')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.treatmentsession')),
            ],
            options={
                'db_table': 'bill_items',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=17)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveIntegerField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_appointments', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'appointment_slots',
                'unique_together': {('day_of_week', 'start_time', 'doctor')},
            },
        ),
        migrations.CreateModel(
            name='ConsultationPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('frontal_before', 'Frontal Before'), ('vertex_before', 'Vertex Before'), ('frontal_after', 'Frontal After'), ('vertex_after', 'Vertex After')], max_length=20)),
                ('image', models.ImageField(upload_to='consultation/photos/')),
                ('notes', models.TextField(blank=True)),
                ('taken_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.hairconsultation')),
            ],
            options={
                'db_table': 'consultation_photos',
                'unique_together': {('consultation', 'photo_type')},
            },
        ),
    ]
